---
apiVersion: v1
kind: Pod
metadata:
  name: no-resources
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-vlgjk
      readOnly: true
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: only-requests
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-vlgjk
      readOnly: true
    resources:
      requests:
        memory: "128Mi"
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: only-limits
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-vlgjk
      readOnly: true
    resources:
      limits:
        memory: "128Mi"
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: requests-and-limits
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    imagePullPolicy: IfNotPresent
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-vlgjk
      readOnly: true
    resources:
      requests:
        memory: "128Mi"
      limits:
        memory: "128Mi"
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: with-linkerd-proxy-no-limits
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    resources:
      limits:
        memory: "128Mi"
  - name: linkerd-proxy
    image: ghcr.io/linkerd/proxy:stable-2.14.0
    ports:
    - containerPort: 4143
      name: linkerd-proxy
      protocol: TCP
    # No memory limits on proxy - should be allowed
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: with-buoyant-proxy-no-limits
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    resources:
      limits:
        memory: "128Mi"
  - name: linkerd-proxy
    image: ghcr.io/buoyantio/proxy:enterprise-2.18.0
    ports:
    - containerPort: 4143
      name: linkerd-proxy
      protocol: TCP
    # No memory limits on proxy - should be allowed
  serviceAccount: default
  serviceAccountName: default
---
apiVersion: v1
kind: Pod
metadata:
  name: app-no-limits-proxy-no-limits
  namespace: faces
spec:
  containers:
  - name: face
    image: ghcr.io/buoyantio/faces-face:2.0.0
    ports:
    - containerPort: 8000
      name: http
      protocol: TCP
    # No memory limits on app container - should fail
  - name: linkerd-proxy
    image: cr.l5d.io/linkerd/proxy:edge-24.6.1
    ports:
    - containerPort: 4143
      name: linkerd-proxy
      protocol: TCP
    # No memory limits on proxy - allowed
  serviceAccount: default
  serviceAccountName: default